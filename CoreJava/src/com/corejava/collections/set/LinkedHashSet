1]This class inherits from HashSet, still implementing Set and refining the contract of its
superclass in only one respect: 

It guarantees that its iterators will return their elements
in the order in which they were first added. It does this by maintaining a linked list of
the set elements.


The linked structure also has a useful consequence in terms of improved performance
for iteration: next performs in constant time, as the linked list can be used to visit each
element in turn.

This is in contrast to HashSet, for which every bucket in the hash table
must be visited whether it is occupied or not, but the overhead involved in maintaining
the linked list means that you would choose LinkedHashSet in preference to HashSet
only if the order the efficiency of iteration were important for your application.


The constructors for LinkedHashSet provide the same facilities as those of HashSet for
configuring the underlying hash table. Like HashSet, it is unsychronized and not threadsafe;
its iterators are fail-fast.